<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="viewport" content="user-scalable=yes, initial-scale=1.35, maximum-scale=1.35, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" />
    <title>DVAMS-Run ID:</title>
    <style type="text/css">
        .style1
        {
            height: 25px;
        }
        .style2
        {
            height: 23px;
        }
    </style>
</head>
<body style="background-color: #000000; font-size: 26px; font-family: Arial, Helvetica, sans-serif; color: #FFFFFF;">
   
    <script src="Scripts/gaussian.js" type="text/javascript"></script>

    <table align="center" style="padding: 0px; border-spacing: 0px; background-color: #000000;">
    <tr><td colspan=2>
    <canvas id="myCanvas" width="920" height="1192" style="background-color: #000000"></canvas>
    <br />
    </td></tr>

    <tr><td >
        <form action="menu_home_dvams.htm" method="get">
            <button type="submit" id="cmdSubmit" name ="return" value="1"
                style ="border-style: none; border-color: inherit; border-width: medium; 
                background-color:transparent; width: 114px; height: 96px;" title="Home Menu">
            <img src="Images/home_icon_gy2.jpg" alt="Main Menu"
            style="width: 112px; height: 94px;">
            </button>
            
        <button type="button" id="btnFace" value="1"  style="border-style: none; border-color: inherit; border-width: medium; 
            background-color:transparent; width: 114px; height: 96px;" title="Statistics" 
                onclick="facebutton_click();" hidden="hidden" >
        <img id="btnImageFace" src="Images/chart_on.jpg" alt="Main Menu"
            style="width: 112px; height: 94px;">
            </button>

             &nbsp;&nbsp;
                      
        </form>
                
    </td>

    <script type="text/javascript">

        // MEAN AND S.D. SETTINGS FOR DISTRIBUTION. CURRENTLY BASED ON VALIDATION STUDY SAMPLE
        // USERS CAN CONFIGURE THIS MANUALLY
        var dist_mean = 60.5; // Mean for distribution of bell curve display
        var dist_sd = 20.5; // Standard deviation for distribution of display
        var bell_filled = '#ffffff'; //Colour for filled part of bell curve
        var bell_unfilled = '#888888'; //Colour for unfilled part of bell curve

        //BAR CHART COLOURS
        var style = new Array();
        style[1] = '#33cccc'// Colour for Scale 1
        style[2] = '#5880ff'// Colour for Scale 2
        style[3] = '#FFFF99'// Colour for Scale 3
        style[4] = '#00cc66'// Colour for Scale 4
        style[5] = '#ff8d87'// Colour for Scale 5
        style[6] = '#ff346d'// Colour for Scale 6
        style[7] = '#CC99FF'// Colour for Scale 7

        var image1 = new Image();
        var image2 = new Image();
        var image3 = new Image();
        var image4 = new Image();
        var image5 = new Image();
        var image6 = new Image();
        var image7 = new Image();
        var colour_bar = new Image();

        window.onload = function () { 
            modebutton_click();
        }

        //Preload images            
        colour_bar.src = "Images/colour_bar.jpg";
        var QueryString = getRequests();
        var sc = new Array();
        sc[1] = QueryString["sc1"];
        sc[2] = QueryString["sc2"];
        sc[3] = QueryString["sc3"];
        sc[4] = QueryString["sc4"];
        sc[5] = QueryString["sc5"];
        sc[6] = QueryString["sc6"];
        sc[7] = QueryString["sc7"];

        var face = QueryString["face"];
        var sResSuffix = "640x480";
        var strDateTime = QueryString["datetime"];
        
        //#1
        var iNum = parseInt(sc[1]);
        iNum += 1;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "1_MS"; prefix = "MSF";
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image1.src = fname;

        //#2
        var iNum = parseInt(sc[2]);
        iNum += 1;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "2_SH"; prefix = "SHF";
        //var x = 376; var y = 80; imratio = 0.7;
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image2.src = fname;

        //#3
        var iNum = parseInt(sc[3]);
        iNum += 1;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "3_DP"; prefix = "DPF";
        //var x = 376; var y = 80; imratio = 0.7;
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image3.src = fname;

        //#4
        var iNum = parseInt(sc[4]);
        iNum += 1;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "4_BE"; prefix = "BEF";
        //var x = 376; var y = 80; imratio = 0.7;
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image4.src = fname;

        //#5
        var iNum = parseInt(sc[5]);
        iNum += 1;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "5_AFC"; prefix = "AFCF";
        //var x = 376; var y = 80; imratio = 0.7;
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image5.src = fname;

        //#6
        var iNum = parseInt(sc[6]);
        iNum += 1;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "6_AGP"; prefix = "AGPF";
        //var x = 376; var y = 80; imratio = 0.7;
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image6.src = fname;

        //#7
        var iNum = parseInt(sc[7]);
        iNum = 101 - iNum;

        var sNum = iNum.toString();
        sNum = "00" + sNum;
        sNum = (sNum).slice(-3);
        sDir = "7_SA"; prefix = "SAF";
        //var x = 376; var y = 80; imratio = 0.7;
        var fname = "Images/DVAMS/" + sDir + face + "/" + sResSuffix + "/" + face + prefix + sNum + ".jpg";
        image7.src = fname;

        //};

        function getRequests() {
            var s1 = location.search.substring(1, location.search.length).split('&'),
            r = {}, s2, i;
            for (i = 0; i < s1.length; i += 1) {
                s2 = s1[i].split('=');
                r[decodeURIComponent(s2[0]).toLowerCase()] = decodeURIComponent(s2[1]);
            }
            return r;
        };

        //Draw page
        function draw_page(facemode, plotmode) {

            function toDegrees(angle) {
                return angle * (180 / Math.PI);
            }

            function toRadians(angle) {
                return angle * (Math.PI / 180);
            }

            function AddZero(num) {
                return (num >= 0 && num < 10) ? "0" + num : num + "";
            }

            var canvas = document.getElementById('myCanvas');
            var context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);

            var centerX = canvas.width / 2;
            var centerY = 450;

            //Read in parameters
            var QueryString = getRequests();

            //Set reference lines
            var ratio = 4;
            var refline_len = ratio * 100;

            //Get face: 1 = #1(F); 2 = #2(M)
            var face = QueryString["face"];

            if (plotmode == 0) { mode = 0; } else {mode = 1;};

            // Get scale scores 1-7
            var sc = new Array();
            sc[1] = QueryString["sc1"];
            sc[2] = QueryString["sc2"];
            sc[3] = QueryString["sc3"];
            sc[4] = QueryString["sc4"];
            sc[5] = QueryString["sc5"];
            sc[6] = QueryString["sc6"];
            sc[7] = QueryString["sc7"];

            //Get mean of 7 scales
            var sc_mean_7 = parseFloat((parseInt(sc[1]) + parseInt(sc[2]) + parseInt(sc[3]) + parseInt(sc[4]) + parseInt(sc[5]) + parseInt(sc[6]) + parseInt(sc[7])) / 7);

            //Now draw faces if face mode. Display preloaded images
            //will have to loop 1 to 7 and get image name based on number
            for (i = 1; i < 8; i++) {
                //};
                if (facemode == 1) {

                    //Traffic light bars
                    var x = 210; var y = 584 + (i * 40); //### Placement of traffic light bars // VERT 
                    var x_centre = x + 250;
                    
                    //Draw bar scores as vectors from centre-point using red/yellow/green scale image
                    //First paint colour scale image 
                    context.drawImage(colour_bar, x, y, 500, 26);
                    context.fillStyle = '#404040';
                    var score_adj = sc[i];

                    //Then grey out ends according to adjusted (original scores)
                    var rectw = score_adj * 5;
                    if (score_adj <= 50) {
                        var rectw = score_adj * 5;
                        context.fillRect(x, y, rectw, 26);
                        context.fillRect(x_centre, y, 250, 26);
                    };

                    if (score_adj >= 50) {
                        var rectw = (score_adj-50) * 5;
                        context.fillRect(x_centre + rectw, y, (250-rectw), 26);
                        context.fillRect(x, y, 250, 26);
                    };

                    //Set font
                    context.fillStyle = "white";
                    context.font = "bold 26px Arial";

                    //Offsets for text alignment
                    var xoffset = 6;
                    var xoffset2 = 738;
                    var yoffset = 604 + (i * 40) //### Placement of traffic light bars - text - //VERT

                    //Draw faces and labels for traffic light bars
                    switch (i) {

                        case 1:
                            var x = 40; var y = 120; imratio = 1.4; //VERT
                            context.drawImage(image1, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Miserable");
                            context.fillText(text, 56 + xoffset, yoffset);
                            var text = ("Satisfied");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                        case 2:
                            var x = 376; var y = 120; imratio = 0.7; //VERT
                            context.drawImage(image2, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Sad");
                            context.fillText(text, 130 + xoffset, yoffset);
                            var text = ("Happy");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                        case 3:
                            var x = 544; var y = 120; imratio = 0.7; //VERT
                            context.drawImage(image3, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Distressed");
                            context.fillText(text, 44 + xoffset, yoffset);
                            var text = ("Peaceful");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                        case 4:
                            var x = 712; var y = 120; imratio = 0.7; //VERT
                            context.drawImage(image4, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Bored");
                            context.fillText(text, 101 + xoffset, yoffset);
                            var text = ("Excited");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                        case 5:
                            var x = 376; var y = 344; imratio = 0.7; //VERT
                            context.drawImage(image5, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Afraid");
                            context.fillText(text, 100 + xoffset, yoffset);
                            var text = ("Calm");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                        case 6:
                            var x = 544; var y = 344; imratio = 0.7; //VERT
                            context.drawImage(image6, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Angry");
                            context.fillText(text, 100 + xoffset, yoffset);
                            var text = ("Peaceful");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                        case 7:
                            var x = 712; var y = 344; imratio = 0.7; //VERT
                            context.drawImage(image7, x, y, (240 * imratio), (320 * imratio));
                            var text = ("Sleepy");
                            context.fillText(text, 92 + xoffset, yoffset);
                            var text = ("Alert");
                            context.fillText(text, xoffset2, yoffset);
                            break;
                    }
                };
            };

            //Draw centre line down traffic light bars //### Placement of traffic light bars - centre line //VERT
            if (facemode == 1) {
                context.strokeStyle = '#ffffff';
                context.lineWidth = 4;
                context.setLineDash([3, 5]);

                context.beginPath();
                context.moveTo(x_centre, 614);
                context.lineTo(x_centre, 904);
                context.stroke();
                // END of bar scores
            };
                         
            //Display Results
            context.fillStyle = "white";
            context.font = "bold 16px Arial";

            //Chart title
            if (facemode == 0) {var caption='Chart' } else {var caption='Display' };
            if (face == 1) { var gender = 'F' } else { var gender = 'M' };
            
            var now = new Date();
            var text = caption + ': #' + gender + '/' + strDateTime; 
            context.fillText(text, 39, 64);
            
            //Display Results 
            var lx = 460;
            var lx2 = 644;
            var rx = 490;
            var rx2 = 710;
            var ry = 1016
                                    
            context.fillStyle = "white";
            context.font = "bold 24px Arial";

            var text = ("Scale Scores");
            context.fillText(text, lx, 978); //VERT

            //Draw Scale Scores with coloured bars
            for (i = 1; i < 8; i++) {

                switch (i) {
                    case 1:
                        var scn = "Mis – Sat";
                        break;
                    case 2:
                        var scn = "Sad – Hap";
                        break;
                    case 3:
                        var scn = "Dis – Pcf";
                        break;
                    case 4:
                        var scn = "Bor – Exc";
                        break;
                    case 5:
                        var scn = "Afr – Clm";
                        break;
                    case 6:
                        var scn = "Ang – Pcf";
                        break;
                    case 7:
                        var scn = "Sle – Ale";
                        break;
                };
                
                var scr = sc[i];
                context.beginPath();
                context.fillStyle = "white";
                context.font = "bold 22px Arial";

                //Display scale label
                var text = (scn + ": " + scr);
                context.fillText(scn, lx, 984 + (i * 24)); 
                context.stroke();

                //Display score
                var text = (scr);
                context.fillText(text, lx + 140, 984 + (i * 24));
                context.stroke();

                context.beginPath();
                context.setLineDash([0]);

                //Draw bars for scores
                context.rect(lx2, 974 + (i * 24), scr * 2, 10); 
                context.fillStyle = style[i];
                context.lineWidth = 1;
                context.fill();

                context.beginPath();
                context.rect(lx2 + (scr * 2), 974 + (i * 24), 200 - (scr * 2), 10);
                context.fillStyle = "#222222";
                context.lineWidth = 1;
                context.fill();

                context.strokeStyle = '#222222';
                context.stroke();
            };
            
            //Top of page
            var text = ("D-VAMS = " + sc_mean_7.toFixed(1));
            context.fillStyle = "#ffffff";
            context.font = "bold 38px Arial";
            context.fillText(text, 616, 74);
            context.stroke();

            //Draw bell curve chart
            //We need to express the mean value on bell curve based on 
            //SD and mean for our sample: Default from validation study sample (n=46)
            //Set coordinates and length of curve display
            var bcx = 110
            var xlen = 280
            var bcy = 1120

            //Display vertical marker for score
            context.strokeStyle = '#cccccc';
            context.lineWidth = 2;
            context.setLineDash([2, 2]);
            context.beginPath();
            context.moveTo(bcx + (sc_mean_7 * (xlen / 100)), bcy);
            context.lineTo(bcx + (sc_mean_7 * (xlen / 100)), bcy - 144);
            context.stroke();

            //Set the distribution and calculate percentage below x (D-VAMS mean)
            var distribution = gaussian(dist_mean, dist_sd * dist_sd);
            var perc = distribution.cdf(sc_mean_7)*100;

            //Loop to draw distribution  intervals of 0.25
            for (i = 0; i <= 100; i += 0.25) {

		//context.beginPath();
		context.lineWidth = 2;
                context.setLineDash([]);

                if (i >= sc_mean_7) {
                       context.strokeStyle = bell_unfilled
                }  else  {
                       context.strokeStyle = bell_filled;
                }

                var prob = distribution.pdf(i);
                context.beginPath();
                context.moveTo(bcx + (i * (xlen / 100)), bcy);
                context.lineTo(bcx + (i * (xlen / 100)), bcy - (prob * 7000));
                context.stroke();
            }

            //End of bell curve code
            context.fillStyle = "white";
            context.font = "bold 22px Arial";

            //Display percentage on bell curve
            var text = (perc.toFixed(1) + '%');
            context.fillText(text, bcx, 1060);

            var text = ("Percentile");
            context.fillText(text, bcx, 1148); 
            
            context.font = "bold 20px Arial";
            var text = ("(x̅:" + dist_mean + "; σ:" + dist_sd + ")"); 
            context.fillText(text, bcx+120, 1148); 
            context.stroke();
        };

        function facebutton_click() {

            //Get values
            var butnFval = document.getElementById('btnFace').value;

            //switch value and image of button for redraw as required
            if (butnFval == '0') { document.getElementById('btnFace').value = '1'; } else { document.getElementById('btnFace').value = '0'; };
            if (butnFval == '0') { document.getElementById('btnFace').title = 'Statistics'; } else { document.getElementById('btnFace').title = 'Face Mode';         };

            //Get values
            var butnFval = document.getElementById('btnFace').value;

            //Draw page with current settings
            draw_page(butnFval, 0);

        };

        function modebutton_click() {

            //Get values
            var butnFval = document.getElementById('btnFace').value;

            //Get values
            var butnFval = document.getElementById('btnFace').value;

            //Draw page with current settings
            draw_page(butnFval, 0);
        };

        function sc1_click() {

            //Get values
            var butnFval = document.getElementById('btnFace').value;

            //Draw page with current settings
            draw_page(butnFval, 0);
        };

        function sc2_click() {

            //Get values - TODO: use sub to retrieve values
            var butnFval = document.getElementById('btnFace').value;

            //Draw page with current settings
            draw_page(butnFval, 0);
        };


    </script>
    
    <td style="color: #CCCCCC; font-family: Arial, Helvetica, sans-serif; font-size: x-small; vertical-align: bottom; text-align: right; padding-bottom: 20px; padding-right: 32px;">    
    Dynamic Visual Analogue Mood Scales (D-VAMS)/'Emotiscope' Copyright © 2013 Paul Barrows
    </td>
    </tr>
    </table>     
    
</body>
</html>
